// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/atm": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ATMs"
                ],
                "summary": "Get ATMs",
                "parameters": [
                    {
                        "type": "string",
                        "format": "entity.FilterATM",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.ATM"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.JSONError"
                        }
                    }
                }
            }
        },
        "/office": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Offices"
                ],
                "summary": "Get offices",
                "parameters": [
                    {
                        "type": "string",
                        "format": "entity.FilterOffice",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Office"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.JSONError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.ATM": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "all_day": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "position": {
                    "$ref": "#/definitions/entity.Position"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Service"
                    }
                }
            }
        },
        "entity.Office": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "distance": {
                    "type": "integer"
                },
                "has_ramp": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "kep": {
                    "type": "boolean"
                },
                "my_branch": {
                    "type": "boolean"
                },
                "open_hours": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.OpenHours"
                    }
                },
                "open_hours_individual": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.OpenHours"
                    }
                },
                "position": {
                    "$ref": "#/definitions/entity.Position"
                },
                "rko": {
                    "type": "boolean"
                },
                "sale_point_format": {
                    "type": "string"
                },
                "sale_point_name": {
                    "type": "string"
                },
                "services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.OfficeService"
                    }
                },
                "status": {
                    "type": "string"
                },
                "suo_availability": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "entity.OfficeService": {
            "type": "object",
            "properties": {
                "activity": {
                    "type": "boolean"
                },
                "capability": {
                    "type": "boolean"
                },
                "current_ticket": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "last_ticket": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.OpenHours": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "string"
                },
                "hours": {
                    "type": "string"
                },
                "is_individual": {
                    "type": "boolean"
                }
            }
        },
        "entity.Position": {
            "type": "object",
            "properties": {
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "metro_station": {
                    "type": "string"
                }
            }
        },
        "entity.Service": {
            "type": "object",
            "properties": {
                "activity": {
                    "type": "boolean"
                },
                "capability": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "http.JSONError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "MORE.Tech 5.0 API",
	Description:      "This is a MORE.Tech 5.0 server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
